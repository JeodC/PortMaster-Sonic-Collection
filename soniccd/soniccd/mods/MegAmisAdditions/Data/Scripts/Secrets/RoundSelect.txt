//----------------Sonic CD Round Select Script----------------//
//--------Scripted by Christian Whitehead 'The Taxman'--------//
//-------Unpacked By Rubberduckycooly's Script Unpacker-------//

// Aliases
#alias Object.Value0	:	Object.Fade	// Also used for timing
#alias Object.Value1	:	Object.Round
#alias Object.Value2	:	Object.HoldTimer
#alias Object.Value3	:	Object.TouchButton

// States
#alias 0	:	STAGESELECT_SETUP
#alias 1	:	STAGESELECT_FADE_IN
#alias 2	:	STAGESELECT_CONTROLS
#alias 3	:	STAGESELECT_LOAD_LEVEL
#alias 4	:	STAGESELECT_EXIT

// Presentation Stages
#alias 1	:	STAGE_P_MENU

// Global SFX
#alias 27	:	SFX_G_SELECT

// Game Mode Aliases
#alias 0	:	MODE_NOSAVE

//Engine & CallBacks
#alias 2	:	MESSAGE_LOSTFOCUS

// Device Type
#alias 1	:	RETRO_MOBILE

// Function declarations
#function RoundSelect_HandleTouchControls
#function RoundSelect_DrawTouchControls


function RoundSelect_HandleTouchControls
	TempValue0 = Screen.CenterX
	TempValue0 -= 138
	TempValue1 = Screen.CenterX
	TempValue1 -= 76
	CheckTouchRect(TempValue0, 40, TempValue1, 92)
	if CheckResult > -1
		KeyDown[0].Up = true
		Object.HoldTimer++
		if Object.HoldTimer == 8
			Object.HoldTimer = 0
			Object.Round--
			if Object.Round < 0
				Object.Round = 6
			end if
		end if
	end if
	CheckTouchRect(TempValue0, 182, TempValue1, 234)
	if CheckResult > -1
		KeyDown[0].Down = true
		Object.HoldTimer++
		if Object.HoldTimer == 8
			Object.HoldTimer = 0
			Object.Round++
			if Object.Round > 6
				Object.Round = 0
			end if
		end if
	end if
	if Engine.Message == MESSAGE_LOSTFOCUS
		Object.TouchButton = 0
	end if
	TempValue0 = Screen.CenterX
	TempValue0 += 28
	TempValue1 = Screen.CenterX
	TempValue1 += 68
	CheckTouchRect(TempValue0, 182, TempValue1, 234)
	if CheckResult > -1
		Object.TouchButton = 1
	else
		CheckTouchRect(0, 0, Screen.XSize, Screen.YSize)
		if CheckResult < 0
			if Object.TouchButton == 1
				Object.TouchButton = 0
				PlaySfx(SFX_G_SELECT, false) 
				Object.State = STAGESELECT_EXIT
			end if
		else
			if Object.TouchButton == 1
				Object.TouchButton = 0
			end if
		end if
	end if
	TempValue0 += 48
	TempValue1 += 48
	CheckTouchRect(TempValue0, 182, TempValue1, 234)
	if CheckResult > -1
		Object.TouchButton = 2
	else
		CheckTouchRect(0, 0, Screen.XSize, Screen.YSize)
		if CheckResult < 0
			if Object.TouchButton == 2
				Object.TouchButton = 0
				PlaySfx(SFX_G_SELECT, false) 
				Object.State = STAGESELECT_LOAD_LEVEL
			end if
		else
			if Object.TouchButton == 2
				Object.TouchButton = 0
			end if
		end if
	end if
end function


function RoundSelect_DrawTouchControls
	TempValue0 = Screen.CenterX
	TempValue0 -= 112
	if KeyDown[0].Up == true
		DrawSpriteScreenXY(10, TempValue0, 68)
	else
		DrawSpriteScreenXY(9, TempValue0, 68)
	end if

	if KeyDown[0].Down == true
		DrawSpriteScreenXY(12, TempValue0, 212)
	else
		DrawSpriteScreenXY(11, TempValue0, 212)
	end if

	TempValue0 += 160
	if Object.TouchButton == 1
		DrawSpriteScreenXY(16, TempValue0, 212)
	else
		DrawSpriteScreenXY(15, TempValue0, 212)
	end if

	TempValue0 += 48
	if Object.TouchButton == 2
		DrawSpriteScreenXY(14, TempValue0, 212)
	else
		DrawSpriteScreenXY(13, TempValue0, 212)
	end if
end function


sub ObjectMain
	switch Object.State
	case STAGESELECT_SETUP
		if Object.Fade < 8
			Object.Fade++
		else
			Object.Fade = 254
			Object.State++
		end if
		SetScreenFade(0, 0, 0, 255)
		break

	case STAGESELECT_FADE_IN
		if Object.Fade > 0
			SetScreenFade(0, 0, 0, Object.Fade)
			Object.Fade -= 8
		else
			Object.State++
		end if
		break

	case STAGESELECT_CONTROLS
		if KeyPress[0].Up == true
			Object.HoldTimer = 0
			Object.Round--
			if Object.Round < 0
				Object.Round = 6
			end if
		else
			if KeyPress[0].Down == true
				Object.HoldTimer = 0
				Object.Round++
				if Object.Round > 6
					Object.Round = 0
				end if
			end if
		end if

		if KeyDown[0].Up == true
			Object.HoldTimer++
			if Object.HoldTimer == 8
				Object.HoldTimer = 0
				Object.Round--
				if Object.Round < 0
					Object.Round = 6
				end if
			end if
		else
			if KeyDown[0].Down == true
				Object.HoldTimer++
				if Object.HoldTimer == 8
					Object.HoldTimer = 0
					Object.Round++
					if Object.Round > 6
						Object.Round = 0
					end if
				end if
			end if
		end if

		if KeyPress[0].Start == true
			Object.State = STAGESELECT_LOAD_LEVEL
		end if

		if KeyPress[0].ButtonA == true
			Object.State = STAGESELECT_LOAD_LEVEL
		end if

		if KeyPress[0].ButtonB == true
			Object.State = STAGESELECT_EXIT
		end if

#platform: Use_Origins
		if Engine.DeviceType == RETRO_MOBILE
			CallFunction(RoundSelect_HandleTouchControls)
		end if
#endplatform

#platform: Use_Standalone
	#platform: Mobile
		CallFunction(RoundSelect_HandleTouchControls)
	#endplatform
#endplatform
		break

	case STAGESELECT_LOAD_LEVEL
		if Object.Fade < 288
			Object.Fade += 8
		else
			Player.Score      = 0
			Player.ScoreBonus = 50000
			
			Stage.ActiveList = REGULAR_STAGE
			Stage.ListPos	 = Object.Round
			Stage.ListPos	*= 10
			
			// Check if we already destroyed Act 1's transporter
			TempValue0   = Stage.ListPos
			TempValue0  /= 10
			TempValue0 <<= 1
			GetBit(Good_Future, Good_Future_List, TempValue0)
			Transporter_Destroyed = Good_Future
			
#platform: Use_Origins
			// Get the proper stage for Anniversary mode
			if game.playMode != BOOT_PLAYMODE_CLASSIC
				// R11A - R12D
				if Stage.ListPos <= 7
					Stage.ListPos += 70
				else
					// R31A - R42D
					if Stage.ListPos <= 27
						if Stage.ListPos >= 10
							Stage.ListPos += 68
						end if
					else
						// R61A - R82D
						if Stage.ListPos <= 67
							if Stage.ListPos >= 40
								Stage.ListPos += 56
							end if
						end if
					end if
				end if
			end if
#endplatform
			
			LoadStage()
		end if
		
		TempValue0 = Object.Fade
		if TempValue0 > 255
			TempValue0 = 255
		end if
		SetScreenFade(0, 0, 0, TempValue0)
		break

	case STAGESELECT_EXIT
		if Object.Fade < 288
			Object.Fade += 8
		else
			Options.GameMode = MODE_NOSAVE
			Stage.ActiveList = PRESENTATION_STAGE
			Stage.ListPos	 = STAGE_P_MENU
			LoadStage()
		end if
		
		TempValue0 = Object.Fade
		if TempValue0 > 255
			TempValue0 = 255
		end if
		SetScreenFade(0, 0, 0, TempValue0)
		break
	end switch
end sub


sub ObjectDraw
	// Background
	TempValue0 = 0
	while TempValue0 < 240
		TempValue1 = 0
		while TempValue1 < Screen.XSize
			DrawSpriteScreenXY(7, TempValue1, TempValue0)
			TempValue1 += 224
		loop
		TempValue0 += 48
	loop
	
	TempValue3 = 45
	
	// ROUND SELECT Text
	DrawSpriteScreenXY(8, Screen.CenterX, TempValue3)
	
	// Round Text
	TempValue3 += 32
	DrawSpriteScreenXY(Object.Round, Screen.CenterX, TempValue3)
	
	TempValue3 += 32
	
	if SpecialStage.TimeStones < 127
		// Zone 1 Transporter
		TempValue0 = Screen.CenterX
		TempValue0 -= 50
		TempValue2 = Object.Round
		TempValue2 <<= 1
		GetBit(TempValue1, Good_Future_List, TempValue2)
		TempValue1 += 19
		DrawSpriteScreenXY(TempValue1, TempValue0, TempValue3)
		DrawSpriteScreenXY(17, TempValue0, TempValue3)
		
		// Zone 2 Transporter
		TempValue0 = Screen.CenterX
		TempValue0 += 50
		TempValue2++
		GetBit(TempValue1, Good_Future_List, TempValue2)
		TempValue1 += 19
		DrawSpriteScreenXY(TempValue1, TempValue0, TempValue3)
		DrawSpriteScreenXY(18, TempValue0, TempValue3)
	else
		// Time Stones
		DrawSpriteScreenXY(21, Screen.CenterX, TempValue3)
	end if
	
#platform: Use_Origins
	if Engine.DeviceType == RETRO_MOBILE
		CallFunction(RoundSelect_DrawTouchControls)
	end if
#endplatform

#platform: Use_Standalone
	#platform: Mobile
		CallFunction(RoundSelect_DrawTouchControls)
	#endplatform
#endplatform
end sub


sub ObjectStartup
	LoadSpriteSheet("Secrets/SecretMenus.gif")
	SpriteFrame(-48, 0, 144, 16, 1, 202)		// #0  - PALMTREE PANIC
	SpriteFrame(-48, 0, 144, 16, 1, 219)		// #1  - COLLISION CHAOS
	SpriteFrame(-48, 0, 144, 16, 1, 236)		// #2  - TIDAL TEMPEST
	SpriteFrame(-48, 0, 144, 16, 1, 253)		// #3  - QUARTZ QUADRANT
	SpriteFrame(-48, 0, 144, 16, 1, 270)		// #4  - WACKY WORKBENCH
	SpriteFrame(-48, 0, 144, 16, 1, 287)		// #5  - STARDUST SPEEDWAY
	SpriteFrame(-48, 0, 144, 16, 1, 304)		// #6  - METALLIC MADNESS
	SpriteFrame(0, 0, 224, 48, 0, 0)			// #7  - Background
	SpriteFrame(-48, 0, 97, 16, 1, 321)			// #8  - Round Select
	SpriteFrame(-10, -10, 20, 20, 136, 117)		// #9  - Up Arrow
	SpriteFrame(-10, -10, 20, 20, 136, 138)		// #10 - Up Arrow Highlight
	SpriteFrame(-10, -10, 20, 20, 157, 117)		// #11 - Down Arrow
	SpriteFrame(-10, -10, 20, 20, 157, 138)		// #12 - Down Arrow Highlight
	SpriteFrame(-20, -10, 40, 20, 159, 159)		// #13 - GO Button
	SpriteFrame(-20, -10, 40, 20, 159, 180)		// #14 - GO Button Highlight
	SpriteFrame(-20, -10, 40, 20, 200, 159)		// #15 - Exit Button
	SpriteFrame(-20, -10, 40, 20, 200, 180)		// #16 - Exit Button Highlight
	SpriteFrame(-25, 70, 49, 16, 1, 338)		// #17 - ZONE 1
	SpriteFrame(-25, 70, 49, 16, 1, 355)		// #18 - ZONE 2
	SpriteFrame(-40, 0, 80, 64, 160, 243)		// #19 - Transporter
	SpriteFrame(-40, 48, 80, 16, 160, 308)		// #20 - Destroyed Transporter
	SpriteFrame(-80, 22, 159, 15, 51, 338)		// #21 - Time Stones
end sub


// ========================
// Editor Subs
// ========================

sub RSDKDraw
	DrawSprite(0)
end sub


sub RSDKLoad
	LoadSpriteSheet("Secrets/SecretMenus.gif")
	SpriteFrame(-48, 0, 97, 16, 1, 321)	// Round Select

	SetVariableAlias(ALIAS_VAR_PROPVAL, "unused")
end sub
