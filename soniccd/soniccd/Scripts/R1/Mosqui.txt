//-----------------Sonic CD Mosqui Script---------------------//
//--------Scripted by Christian Whitehead 'The Taxman'--------//
//-------Unpacked By Rubberduckycooly's Script Unpacker-------//

// Aliases
#alias Object.Value0		:	Object.Timer
#alias Object.Value1		:	Object.XOriginPos
#alias Object.Value2		:	Object.YOriginPos

#alias Object.PropertyValue	:	Object.Quality

// States
#alias 0	:	MOSQUI_MOVE_LEFT
#alias 1	:	MOSQUI_MOVE_RIGHT
#alias 2	:	MOSQUI_TURN_DOWN
#alias 3	:	MOSQUI_DART
#alias 4	:	MOSQUI_BLANK
#alias 5	:	MOSQUI_RESTORE

// Collision Sides
#alias 0	:	CSIDE_FLOOR

// Stage SFX
#alias 2	:	SFX_S_JAB

// Badnik Quality / Property Values
#alias 0	:	GOOD_QUALITY
#alias 1	:	BAD_QUALITY

// Priority
#alias 0	:	PRIORITY_BOUNDS
#alias 1	:	PRIORITY_ACTIVE


sub ObjectMain
	if Object.Quality == GOOD_QUALITY
		switch Object.State
		case MOSQUI_MOVE_LEFT
			Object.Priority = PRIORITY_ACTIVE
			Object.Frame++
			Object.Frame &= 3

			Object.XPos -= 0x10000

			Object.Timer--
			if Object.Timer == -128
				Object.State = MOSQUI_MOVE_RIGHT
				Object.Direction = FACING_LEFT
			end if

			if Player.YPos > Object.YPos	// Check that player is below Mosqui
				TempValue0 = Player.YPos
				TempValue0 -= Object.YPos
				if TempValue0 < 0x800000
					if Player.XPos > Object.XPos	// Check that player is in attack range
						TempValue0 = Player.XPos
						TempValue0 -= Object.XPos
					else
						TempValue0 = Object.XPos
						TempValue0 -= Player.XPos
					end if
					if TempValue0 < 0x300000
						Object.Timer = 0
						Object.Frame = 2
						Object.State = MOSQUI_TURN_DOWN
					end if
				end if
			end if
			break

		case MOSQUI_MOVE_RIGHT
			Object.Frame++
			Object.Frame &= 3
			Object.XPos += 0x10000
			Object.Timer++
			if Object.Timer == 128
				Object.State = MOSQUI_MOVE_LEFT
				Object.Direction = FACING_RIGHT
			end if
			if Player.YPos > Object.YPos	// Check that player is below Mosqui
				TempValue0 = Player.YPos
				TempValue0 -= Object.YPos
				if TempValue0 < 0x800000
					if Player.XPos > Object.XPos	// Check that player is in attack range
						TempValue0 = Player.XPos
						TempValue0 -= Object.XPos
					else
						TempValue0 = Object.XPos
						TempValue0 -= Player.XPos
					end if
					if TempValue0 < 0x300000
						Object.Timer = 0
						Object.Frame = 2
						Object.State = MOSQUI_TURN_DOWN
					end if
				end if
			end if
			break

		case MOSQUI_TURN_DOWN
			Object.Timer++
			if Object.Timer == 8
				Object.Timer = 0
				Object.Frame++
				if Object.Frame == 5
					Object.Frame = 4
					Object.State = MOSQUI_DART
				end if
			end if
			break

		case MOSQUI_DART
			Object.YPos += 0x60000
			ObjectTileCollision(CSIDE_FLOOR, 0, 14, 0)
			if CheckResult == true
				Object.State = MOSQUI_BLANK
				PlayStageSfx(SFX_S_JAB, false)
			end if
			break

		case MOSQUI_BLANK
			break

		case MOSQUI_RESTORE
			if Object.OutOfBounds == true
				Object.State = MOSQUI_MOVE_LEFT
				Object.Direction = FACING_RIGHT
				Object.Priority = PRIORITY_BOUNDS
			end if
			break

		end switch
	else
		switch Object.State
		case MOSQUI_MOVE_LEFT
			Object.Priority = PRIORITY_ACTIVE

			Object.Frame++
			Object.Frame %= 10

			Object.XPos -= 0x8000

			Object.Timer--
			if Object.Timer == -256
				Object.State = MOSQUI_MOVE_RIGHT
				Object.Direction = FACING_LEFT
			end if

			if Player.YPos > Object.YPos	// Check that player is below Mosqui
				TempValue0  = Player.YPos
				TempValue0 -= Object.YPos
				if TempValue0 < 0x400000
					if Player.XPos > Object.XPos	// Check that player is in attack range
						TempValue0  = Player.XPos
						TempValue0 -= Object.XPos
					else
						TempValue0  = Object.XPos
						TempValue0 -= Player.XPos
					end if
					if TempValue0 < 0x300000
						Object.Timer = 0
						Object.Frame = 7
						Object.State = MOSQUI_TURN_DOWN
					end if
				end if
			end if
			break

		case MOSQUI_MOVE_RIGHT
			Object.Frame++
			Object.Frame %= 10

			Object.XPos += 0x8000

			Object.Timer++
			if Object.Timer == 256
				Object.State = MOSQUI_MOVE_LEFT
				Object.Direction = FACING_RIGHT
			end if
			if Player.YPos > Object.YPos	// Check that player is below Mosqui
				TempValue0  = Player.YPos
				TempValue0 -= Object.YPos
				if TempValue0 < 0x400000
					if Player.XPos > Object.XPos	// Check that player is in attack range
						TempValue0  = Player.XPos
						TempValue0 -= Object.XPos
					else
						TempValue0  = Object.XPos
						TempValue0 -= Player.XPos
					end if
					if TempValue0 < 0x300000
						Object.Timer = 0
						Object.Frame = 7
						Object.State = MOSQUI_TURN_DOWN
					end if
				end if
			end if
			break

		case MOSQUI_TURN_DOWN
			Object.Timer++
			if Object.Timer == 16
				Object.Timer = 0
				Object.Frame++
				if Object.Frame == 10
					Object.Frame = 9
					Object.State = MOSQUI_DART
				end if
			end if
			break
			
		case MOSQUI_DART
			Object.YPos += 0x60000
			ObjectTileCollision(CSIDE_FLOOR, 0, 14, 0)
			if CheckResult == true
				Object.State = MOSQUI_BLANK
			end if
			break

		case MOSQUI_BLANK
			break

		case MOSQUI_RESTORE
			if Object.OutOfBounds == true
				Object.State = MOSQUI_MOVE_LEFT
				Object.Priority = PRIORITY_BOUNDS
			end if
			break
		end switch
	end if

	if Object.OutOfBounds == true
		TempValue0 = Object.XPos
		TempValue1 = Object.YPos

		Object.XPos = Object.XOriginPos
		Object.YPos = Object.YOriginPos

		if Object.OutOfBounds == true
			Object.XPos = Object.XOriginPos
			Object.YPos = Object.YOriginPos

			Object.Direction = FACING_RIGHT
			Object.Timer = 0
			Object.Frame = 0
			Object.Priority = PRIORITY_BOUNDS

			Object.State = MOSQUI_MOVE_LEFT
		else
			Object.XPos = TempValue0
			Object.YPos = TempValue1
		end if
	end if

	CallFunction(StageSetup_CheckGoodFuture)	// Check if it should be a flower
end sub


sub ObjectPlayerInteraction
	if Object.State < MOSQUI_RESTORE
#platform: Use_Standalone
		PlayerObjectCollision(C_TOUCH, -15, -10, 15, 10)
#endplatform
#platform: Use_Origins
		PlayerObjectCollision(C_ENEMY, -15, -10, 15, 10)
#endplatform
		if CheckResult == true
			CallFunction(Player_BadnikBreak)
		end if
	end if
end sub


sub ObjectDraw
	if Object.State < MOSQUI_RESTORE
		if Object.Quality == GOOD_QUALITY
			if Object.State < MOSQUI_TURN_DOWN
				TempValue0   = Object.Frame
				TempValue0 >>= 1
				DrawSpriteFX(TempValue0, FX_FLIP, Object.XPos, Object.YPos)
			else
				DrawSpriteFX(Object.Frame, FX_FLIP, Object.XPos, Object.YPos)
			end if
		else
			if Object.State < MOSQUI_TURN_DOWN
				TempValue0  = Object.Frame
				TempValue0 /= 5
				TempValue0 += 5
				DrawSpriteFX(TempValue0, FX_FLIP, Object.XPos, Object.YPos)
			else
				DrawSpriteFX(Object.Frame, FX_FLIP, Object.XPos, Object.YPos)
			end if
		end if
	end if
end sub


sub ObjectStartup
	LoadSpriteSheet("R1/Objects.gif")

	// Good Mosqui
	SpriteFrame(-16, -11, 32, 24, 51, 1)		// #0 - Mosqui Fly Frame 0
	SpriteFrame(-16, -3, 32, 16, 51, 26)		// #1 - Mosqui Fly Frame 1
	SpriteFrame(-16, -14, 32, 32, 51, 43)		// #2 - Mosqui Turning Frame 0
	SpriteFrame(-6, -13, 24, 32, 117, 43)		// #3 - Mosqui Turning Frame 1
	SpriteFrame(-10, -14, 24, 32, 142, 43)		// #4 - Mosqui Turning Frame 0

	// Bad Mosqui
	SpriteFrame(-16, -11, 32, 24, 84, 1)		// #5 - Mosqui Fly Frame 0
	SpriteFrame(-16, -3, 32, 16, 84, 26)		// #6 - Mosqui Fly Frame 1
	SpriteFrame(-16, -14, 32, 32, 84, 43)		// #7 - Mosqui Turning Frame 0
	SpriteFrame(-6, -13, 24, 32, 51, 76)		// #8 - Mosqui Turning Frame 1
	SpriteFrame(-10, -14, 24, 32, 76, 76)		// #9 - Mosqui Turning Frame 2

	// Used to be below LoadSpriteSheet, moved here for consistency
	ArrayPos0 = 32
	while ArrayPos0 < 1056
		if Object[ArrayPos0].Type == TypeName[Mosqui]
			Object[ArrayPos0].XOriginPos = Object[ArrayPos0].XPos
			Object[ArrayPos0].YOriginPos = Object[ArrayPos0].YPos
		end if
		ArrayPos0++
	loop
end sub


// ========================
// Editor Subs
// ========================

sub RSDKEdit
	if Editor.ReturnVariable == true
		switch Editor.VariableID
		case EDIT_VAR_PROPVAL // Property Value
			CheckResult = Object.PropertyValue
			CheckResult &= 1
			break
		case 0 // condition
			CheckResult = Object.PropertyValue
			CheckResult &= 1
			break
		end switch
	else
		switch Editor.VariableID
		case EDIT_VAR_PROPVAL // Property Value
			Object.PropertyValue = Editor.VariableValue
			Object.PropertyValue &= 1
			break
		case 0 // condition
			Object.PropertyValue = Editor.VariableValue
			Object.PropertyValue &= 1
			break
		end switch
	end if
end sub


sub RSDKDraw
	DrawSprite(Object.PropertyValue)
end sub


sub RSDKLoad
	LoadSpriteSheet("R1/Objects.gif")

	// Good Mosqui
	SpriteFrame(-16, -11, 32, 24, 51, 1)		// #0 - Mosqui Fly

	// Bad Mosqui
	SpriteFrame(-16, -11, 32, 24, 84, 1)		// #1 - Mosqui Fly

	AddEditorVariable("condition")
	SetActiveVariable("condition")
	AddEnumVariable("Good Quality", GOOD_QUALITY)
	AddEnumVariable("Bad Quality", BAD_QUALITY)
end sub
