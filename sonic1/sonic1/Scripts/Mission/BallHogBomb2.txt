// ----------------------------------
// RSDK Project: Sonic 1
// Script Description: Ball Hog Bomb Object
// Script Author: Christian Whitehead/Simon Thomley
// Unpacked by Rubberduckycooly's script unpacker
// ----------------------------------

// This script is a copy of the normal Ball Hog Bomb script but with tile collisions removed so that Ball Hogs can be placed on Mission Blocks

// ========================
// Aliases
// ========================

private alias object.value0 : object.time // Set by Ball Hog object when creating this projectile
private alias object.value1 : object.bouncePos // new Ball Hog Bomb 2 value

// Path ID Aliases
private alias 0 : PATH_A


// ========================
// Events
// ========================

event ObjectUpdate
	object.xpos += object.xvel
	object.ypos += object.yvel
	object.yvel += 0x3800
	
	if object.yvel > 0
		// This bit is a new Ball Hog Bomb 2 bit - instead of checking for tile collisions here, let's just see if the object is below its bounce threshold
		// temp0 doesn't really need to be used here but it was used in the base bomb script so i guess they just wanted to stick with that?
		temp0 = object.ypos
		if temp0 >= object.bouncePos
			object.yvel = -0x30000
		end if
		
		// ..if we're going right, then check left wall collision?
		// (this bit is new to the Ball Hog Bomb 2 script too, it's not in the normal version)
		if object.xvel > 0
			ObjectTileGrip(CSIDE_LWALL, 8, 0, PATH_A)
			if checkResult != false
				FlipSign(object.xvel)
			end if
		end if
	end if
	
	foreach (GROUP_PLAYERS, currentPlayer, ACTIVE_ENTITIES)
		BoxCollisionTest(C_TOUCH, object.entityPos, -6, -6, 6, 6, currentPlayer, C_BOX, C_BOX, C_BOX, C_BOX)
		if checkResult == true
			CallFunction(Player_Hit)
		end if
	next
	
	object.animationTimer++
	if object.animationTimer >= 6
		object.frame ^= 1
		object.animationTimer = 0
	end if
	
	// Update the bomb's countdown timer
	if object.time > 0
		object.time--
	else
		// Explode the bomb
		ResetObjectEntity(object.entityPos, TypeName[Blank Object], 0, object.xpos, object.ypos)
		CreateTempObject(TypeName[Explosion], 0, object.xpos, object.ypos)
		object[tempObjectPos].drawOrder = 4
		PlaySfx(SfxName[Explosion], false)
	end if
end event


event ObjectDraw
	DrawSpriteFX(object.frame, FX_FLIP, object.xpos, object.ypos)
end event


event ObjectStartup
	CheckCurrentStageFolder("Zone06")
	if checkResult == true
		LoadSpriteSheet("SBZ/Objects.gif")
		SpriteFrame(-7, -7, 14, 14, 82, 126)
		SpriteFrame(-7, -7, 14, 14, 82, 143)
	end if
	
	CheckCurrentStageFolder("Zone07")
	if checkResult == true
		LoadSpriteSheet("MBZ/Objects.gif")
		SpriteFrame(-7, -7, 14, 14, 165, 248)
		SpriteFrame(-7, -7, 14, 14, 182, 248)
	end if
end event


// ========================
// Editor Events
// ========================

event RSDKDraw
	DrawSprite(0)
end event


event RSDKLoad
	CheckCurrentStageFolder("Zone07")
	if checkResult == true
		LoadSpriteSheet("MBZ/Objects.gif")
		SpriteFrame(-7, -7, 14, 14, 165, 248)
	else
		LoadSpriteSheet("SBZ/Objects.gif")
		SpriteFrame(-7, -7, 14, 14, 82, 126)
	end if
	
	SetVariableAlias(ALIAS_VAR_PROPVAL, "unused")
end event
