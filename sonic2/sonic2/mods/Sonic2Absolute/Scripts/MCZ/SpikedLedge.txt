// ----------------------------------
// RSDK Project: Sonic 1/Sonic 2
// Script Description: Spiked Ledge Object
// Script Author: Christan Whitehead/Simon Thomley
// Unpacked by Rubberduckycooly's script unpacker
// ----------------------------------

//-------Aliases-------//
private alias 47 : TYPE_SPIKEDLEDGE

// Function declarations
reserve function SpikedLedge_DebugDraw
reserve function SpikedLedge_DebugSpawn

// Static Values

// Tables

function SpikedLedge_DebugDraw
	DrawSpriteFX(0, FX_FLIP, object.xpos, object.ypos)
end function


function SpikedLedge_DebugSpawn
	CreateTempObject(TypeName[Spiked Ledge], 0, object.xpos, object.ypos)
	object[tempObjectPos].direction = object.direction
	if object.direction == FLIP_NONE
		object[tempObjectPos].xvel = -0x10000
	else
		object[tempObjectPos].xvel = 0x10000
	end if
end function


event ObjectMain
	switch object.state
	case 0
		foreach (GROUP_PLAYERS, currentPlayer, ACTIVE_ENTITIES)
			if object[currentPlayer].value42 == 0
				if object.direction == FLIP_NONE
					BoxCollisionTest(C_TOUCH, object.entityPos, -192, -16, -64, -14, currentPlayer, HITBOX_AUTO, HITBOX_AUTO, HITBOX_AUTO, HITBOX_AUTO)
				else
					BoxCollisionTest(C_TOUCH, object.entityPos, 64, -16, 192, -14, currentPlayer, HITBOX_AUTO, HITBOX_AUTO, HITBOX_AUTO, HITBOX_AUTO)
				end if
			else
				checkResult = 0
			end if
			if checkResult == 1
				if object.priority != PRIORITY_XBOUNDS_DESTROY
					object.priority = PRIORITY_ACTIVE
				end if
				object.state = 1
				object.value2 = object.xvel
			end if
		next
		break
	case 1
		object.xpos += object.xvel
		object.value0++
		if object.value0 == 128
			object.value0 = 0
			object.value2 = 0
			object.state++
		end if
		break
	case 2
		break
	end switch
	foreach (GROUP_PLAYERS, currentPlayer, ACTIVE_ENTITIES)
		BoxCollisionTest(C_BOX2, object.entityPos, -64, -16, 64, 16, currentPlayer, HITBOX_AUTO, HITBOX_AUTO, HITBOX_AUTO, HITBOX_AUTO)
		switch checkResult
		case 1
			object[currentPlayer].xpos += object.value2
			break
		case 2
			if object.direction == FLIP_NONE
				CallFunction(PlayerObject_Hit)
			end if
			break
		case 3
			if object.direction == FLIP_X
				CallFunction(PlayerObject_Hit)
			end if
			break
		end switch
	next
	if object.outOfBounds == 1
		temp0 = object.xpos
		object.xpos = object.value1
		if object.outOfBounds == 1
			if object.priority != PRIORITY_XBOUNDS_DESTROY
				object.priority = PRIORITY_ACTIVE_BOUNDS
			end if
			object.value2 = 0
			object.state = 0
		else
			object.xpos = temp0
		end if
	end if
end event


event ObjectDraw
	DrawSpriteFX(0, FX_FLIP, object.xpos, object.ypos)
end event


event ObjectStartup
	LoadSpriteSheet("MCZ/Objects.gif")
	SpriteFrame(-64, -16, 128, 32, 1, 99)
	foreach (TypeName[Spiked Ledge], arrayPos0, ALL_ENTITIES)
		object[arrayPos0].value1 = object[arrayPos0].xpos
		object[arrayPos0].direction = object[arrayPos0].propertyValue
		object[arrayPos0].direction &= FLIP_X
		if object[arrayPos0].direction == FLIP_NONE
			object[arrayPos0].xvel = -0x10000
		else
			object[arrayPos0].xvel = 0x10000
		end if
	next
	SetTableValue(TypeName[Spiked Ledge], DebugMode_ObjCount, DebugMode_TypesTable)
	SetTableValue(SpikedLedge_DebugDraw, DebugMode_ObjCount, DebugMode_DrawTable)
	SetTableValue(SpikedLedge_DebugSpawn, DebugMode_ObjCount, DebugMode_SpawnTable)
	DebugMode_ObjCount++
end event

event RSDKDraw
	DrawSprite(0)
end event

event RSDKLoad
	LoadSpriteSheet("Global/Display.gif")
	SpriteFrame(-16, -16, 32, 32, 1, 143)
end event
