//------------------Sonic CD Boss Leg Script------------------//
//--------Scripted by Christian Whitehead 'The Taxman'--------//
//-------Unpacked By Rubberduckycooly's Script Unpacker-------//

// Aliases
#alias Object.Value0		:	Object.LegJointEntity
#alias Object.Value1		:	Object.FootEntity
#alias Object.Value2		:	Object.XOffSet
#alias Object.Value4		:	Object.LegSide
#alias Object.Value5		:	Object.YOffSet
#alias Object.Value6		:	Object.XVelocity
#alias Object.Value7		:	Object.YVelocity

// Foot Aliases
#alias Object.Value4		:	Foot.LegSide

// Leg Joint Aliases
#alias Object.XPos			:	LegJoint.XPos
#alias Object.YPos			:	LegJoint.YPos
#alias Object.Value0		:	LegJoint.BodyEntity

#alias Object.Value1		:	LegJointR.LegREntity

// Leg Aliases
#alias Object.XPos			:	LegR.XPos
#alias Object.YPos			:	LegR.YPos

// Body Aliases
#alias Object.Value0		:	Body.FaceEntity
#alias Object.Value1		:	Body.LegJointREntity
#alias Object.XPos			:	Body.XPos
#alias Object.YPos			:	Body.YPos

// Face Aliases
#alias Object.XPos			:	Face.XPos
#alias Object.YPos			:	Face.YPos
#alias Object.Animation		:	Face.Animation
#alias Object.Direction		:	Face.FaceTimer

// Player Aliases
#alias Player.Value4		:	Player.InvincibleTimer

// States
#alias 0	:	BOSSLEG_SETUP
#alias 1	:	BOSSLEG_LANDING
#alias 2	:	BOSSLEG_L_MIMIC_R
#alias 3	:	BOSSLEG_MOVE
#alias 4	:	BOSSLEG_MOVE_OPPOSITE
#alias 5	:	BOSSLEG_MOVE_C			// Charged version
#alias 6	:	BOSSLEG_MOVE_OPPOSITE_C	// Charged version
#alias 7	:	BOSSLEG_DESTROYED

// Eggman Animations
#alias 1	:	EGGANI_LAUGH

// Priority
#alias 0	:	PRIORITY_BOUNDS

// Function declarations
#function BossLeg_SaveLegPosition
#function BossLeg_HandleMovement

function BossLeg_SaveLegPosition
	GetBit(TempValue0, Object.LegSide, 5)
	if TempValue0 == true
		ArrayPos0 = Object.LegJointEntity
		LegJoint[ArrayPos0].XPos += TempValue1
		LegJoint[ArrayPos0].YPos += TempValue2

		ArrayPos1 = LegJoint[ArrayPos0].BodyEntity
		Body[ArrayPos1].XPos += TempValue1
		Body[ArrayPos1].YPos += TempValue2

		ArrayPos0 = Body[ArrayPos1].FaceEntity
		Face[ArrayPos0].XPos += TempValue1
		Face[ArrayPos0].YPos += TempValue2
	end if
end function


function BossLeg_HandleMovement
	ArrayPos0 = Object.LegJointEntity
	Object.XPos  = LegJoint[ArrayPos0].XPos
	Object.XPos += 0x40000
	Object.XPos += Object.XVelocity
	
	Object.YPos  = LegJoint[ArrayPos0].YPos
	Object.YPos += 0x100000
	Object.YPos += Object.YVelocity
end function


sub ObjectMain
	switch Object.State
	case BOSSLEG_SETUP
		Object.XOffSet = 0x8000
		Object.YOffSet = 0x4000

		Object.State = BOSSLEG_LANDING
		break
		
	case BOSSLEG_LANDING
		ArrayPos0 = Object.LegJointEntity

		Object.XPos  = LegJoint[ArrayPos0].XPos
		Object.XPos += 0x40000

		Object.YPos  = LegJoint[ArrayPos0].YPos
		Object.YPos += 0x100000
		break

	case BOSSLEG_L_MIMIC_R
		// No matter the leg, it will end up picking the right leg here
		ArrayPos0 = Object.LegJointEntity
		ArrayPos1 = LegJoint[ArrayPos0].BodyEntity
		ArrayPos0 = Body[ArrayPos1].LegJointREntity
		ArrayPos1 = LegJointR[ArrayPos0].LegREntity

		Object.XPos  = LegR[ArrayPos1].XPos
		Object.XPos -= 0xA0000
		Object.YPos  = LegR[ArrayPos1].YPos
		break

	case BOSSLEG_MOVE	// whatever leg this is, it will move
		ArrayPos0 = Object.FootEntity
		if Object.XVelocity < 0x80000
			TempValue1 = Object.XOffSet
			Object.XVelocity += TempValue1

			GetBit(TempValue0, Object.LegSide, 4)
			if TempValue0 == true
				FlipSign(TempValue1)
				TempValue2 = false
				CallFunction(BossLeg_SaveLegPosition)
			else
				CallFunction(BossLeg_HandleMovement)
			end if

		else
			CallFunction(BossLeg_HandleMovement)
		end if
		
		break

	case BOSSLEG_MOVE_OPPOSITE	// whatever leg this is, it will wait for the opposite to move
		ArrayPos0 = Object.FootEntity
		if Object.XVelocity > -0x80000
			TempValue1 = Object.XOffSet
			Object.XVelocity -= TempValue1

			GetBit(TempValue0, Object.LegSide, 4)
			if TempValue0 == true
				TempValue2 = false
				CallFunction(BossLeg_SaveLegPosition)
			else
				CallFunction(BossLeg_HandleMovement)
			end if
			
		else
			CallFunction(BossLeg_HandleMovement)
		end if

		break

	case BOSSLEG_MOVE_C		// whatever leg this is, it will move
		if Object.XVelocity > -0x80000
			TempValue1 = Object.XOffSet
			Object.XVelocity -= TempValue1
		else
			TempValue1 = false
		end if

		if Object.YVelocity > -0x40000
			TempValue2 = Object.YOffSet
			Object.YVelocity -= TempValue2
		else
			TempValue2 = false
		end if

		GetBit(TempValue0, Object.LegSide, 4)
		if TempValue0 == true
			CallFunction(BossLeg_SaveLegPosition)
		else
			CallFunction(BossLeg_HandleMovement)
		end if
		break

	case BOSSLEG_MOVE_OPPOSITE_C	// whatever leg this is, it will wait for it's opposite to move
		if Object.XVelocity > -0x80000
			TempValue1 = Object.XOffSet
			Object.XVelocity -= TempValue1
		else
			TempValue1 = 0
		end if
		if Object.YVelocity < 0x40000
			TempValue2 = Object.YOffSet
			Object.YVelocity += TempValue2
		else
			TempValue2 = 0
		end if

		GetBit(TempValue0, Object.LegSide, 4)
		if TempValue0 == true
			FlipSign(TempValue2)
			CallFunction(BossLeg_SaveLegPosition)
		else
			CallFunction(BossLeg_HandleMovement)
		end if
		break

	case BOSSLEG_DESTROYED
		GetBit(TempValue0, Object.LegSide, 4)
		if TempValue0 == false
			Object.XOffSet -= 0x600
		else
			Object.XOffSet += 0x600
		end if
		Object.XPos += Object.XOffSet

		Object.YOffSet += 0x1A60
		Object.YPos += Object.YOffSet

		if Object.OutOfBounds == true
			Object.Type = TypeName[Blank Object]
			Object.Priority = PRIORITY_BOUNDS
		end if
		break
	end switch
end sub


sub ObjectPlayerInteraction
	if Object.State < BOSSLEG_DESTROYED
		if Player.InvincibleTimer == 0
			PlayerObjectCollision(C_TOUCH, -12, -20, 12, -20)
			if CheckResult == true

				Player.State = Player_State_GotHit

				ArrayPos0 = Object.LegJointEntity
				ArrayPos1 = LegJoint[ArrayPos0].BodyEntity
				ArrayPos0 = Body[ArrayPos1].FaceEntity

				Face[ArrayPos0].Animation = EGGANI_LAUGH
				Face[ArrayPos0].FaceTimer = 180
				if Player.XPos > Object.XPos
					Player.Speed =  0x20000
				else
					Player.Speed = -0x20000
				end if
			end if
		end if
	end if
end sub


sub ObjectDraw
	DrawSprite(0)
end sub


sub ObjectStartup
	LoadSpriteSheet("R1/Objects3.gif")

	SpriteFrame(-12, -20, 24, 40, 74, 1)	// #0 - EGG-HVC-001 Leg
end sub


// ========================
// Editor Subs
// ========================

sub RSDKDraw
	DrawSprite(0)
end sub


sub RSDKLoad
	LoadSpriteSheet("R1/Objects3.gif")
	SpriteFrame(-12, -20, 24, 40, 74, 1)	// #0 - EGG-HVC-001 Leg

	SetVariableAlias(ALIAS_VAR_PROPVAL, "unused")
end sub