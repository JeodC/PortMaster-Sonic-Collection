//----------------Sonic CD Red Spring Script------------------//
//--------Scripted by Christian Whitehead 'The Taxman'--------//
//-------Unpacked By Rubberduckycooly's Script Unpacker-------//

// Aliases
#alias Object.Value0	:	Object.ActiveSpringFrame
#alias Object.Value2	:	Object.Unused // "introduced" in Origins Plus but it isn't really used for anything
#alias Object.Value7	:	Object.EnabledInAir // Only has effect on horizontal springs

// Player Aliases
#alias Player.Value7	:	Player.AnimationReserve

// Directions
#alias 0	:	FLIP_NONE
#alias 2	:	FLIP_Y

// Gravity
#alias 0	:	GRAVITY_GROUND
#alias 1	:	GRAVITY_AIR

// Collision Modes
#alias 0	:	CMODE_FLOOR
#alias 2	:	CMODE_ROOF

// Global SFX
#alias 11	:	SFX_G_SPRING

// Property Values
#alias 0	:	FACE_FACING_UP
#alias 1	:	FACE_FACING_RIGHT
#alias 2	:	FACE_FACING_LEFT
#alias 3	:	FACE_FACING_DOWN
#alias 4	:	FACE_FACING_DIAGONAL_UR
#alias 5	:	FACE_FACING_DIAGONAL_UL
#alias 6	:	FACE_FACING_DIAGONAL_DR	// Actually not facing down when spawned from debug mode
#alias 7	:	FACE_FACING_DIAGONAL_DL	// Actually not facing down when spawned from debug mode


sub ObjectPlayerInteraction
	switch Object.PropertyValue
	case FACE_FACING_UP
		TempValue0 = false
		if Player.Gravity == GRAVITY_AIR
			TempValue0 = true
		end if

		if Player.CollisionMode > CMODE_FLOOR
			if Player.YVelocity < 0
				TempValue0 = true
			end if
		end if

		if TempValue0 == false
			PlayerObjectCollision(C_BOX, -16, -8, 16, 8)

			PlayerObjectCollision(C_TOUCH, -16, -10, 16, -6)
#platform: Use_Origins
			if CheckResult == true
				if Stage.PlayerListPos == PLAYER_KNUCKLES
					if Player.State == Player_State_LedgePullUp
						CheckResult = false
						Object.Unused = 1
					end if
				end if
			end if
#endplatform
			if CheckResult == true
				Player.AnimationReserve = ANI_WALKING

				if Player.Animation == ANI_RUNNING
					Player.AnimationReserve = ANI_RUNNING
				end if

				if Player.Animation == ANI_PEELOUT
					Player.AnimationReserve = ANI_PEELOUT
				end if

				Object.ActiveSpringFrame = 1

#platform: Use_Origins
				Player.State	 = Player_State_Air_NoDropDash
#endplatform

#platform: Use_Standalone
				Player.State	 = Player_State_Air
#endplatform

				Player.Gravity	 = GRAVITY_AIR
				Player.YVelocity = -0x100000
				Player.Animation = ANI_BOUNCING
				Player.Timer	 = 0

				PlaySfx(SFX_G_SPRING, false)
				
#platform: Use_Haptics
				HapticEffect(9, 0, 0, 0)
#endplatform

			end if
		else
			if Player.YVelocity >= 0
				PlayerObjectCollision(C_PLATFORM, -16, -8, 16, 8)

				PlayerObjectCollision(C_TOUCH, -16, -10, 16, -6)
#platform: Use_Origins
				if CheckResult == true
					if Stage.PlayerListPos == PLAYER_KNUCKLES
						if Player.State == Player_State_LedgePullUp
							CheckResult = false
							Object.Unused = 1
						end if
					end if
				end if
#endplatform
				if CheckResult == true

					Player.AnimationReserve = ANI_WALKING
					
					if Player.Animation == ANI_RUNNING
						Player.AnimationReserve = ANI_RUNNING
					end if

					if Player.Animation == ANI_PEELOUT
						Player.AnimationReserve = ANI_PEELOUT
					end if
					
					Object.ActiveSpringFrame = 1
					
#platform: Use_Origins
					Player.State	 = Player_State_Air_NoDropDash
#endplatform

#platform: Use_Standalone
					Player.State	 = Player_State_Air
#endplatform

					Player.Gravity	 = GRAVITY_AIR
					Player.YVelocity = -0x100000
					Player.Animation = ANI_BOUNCING
					Player.Timer	 = 0

					PlaySfx(SFX_G_SPRING, false)
				
#platform: Use_Haptics
					HapticEffect(9, 0, 0, 0)
#endplatform

				end if
			end if
		end if
		break

	case FACE_FACING_RIGHT
		PlayerObjectCollision(C_BOX, -8, -16, 8, 16)
#platform: Use_Origins
		if Player.Animation != ANI_GLIDING
#endplatform
			if Player.Gravity == GRAVITY_GROUND

				PlayerObjectCollision(C_TOUCH, 6, -15, 11, 15)
				if CheckResult == true
#platform: Use_Origins
					CheckResult = false
					if Player.State == Player_State_GlideSlide
						CheckResult = true
					end if
					if Player.State == Player_State_HammerDash
						CheckResult = true
					end if
					if CheckResult == true
						Player.State = Player_State_Ground
					end if
#endplatform
					Object.ActiveSpringFrame = 1

					Player.Angle		 = 0
					Player.Speed		 = 0x100000
					Player.CollisionMode = CMODE_FLOOR
					Player.Pushing		 = false
					Player.Direction	 = FACING_RIGHT
					Player.ControlLock	 = 16

					PlaySfx(SFX_G_SPRING, false)
#platform: Use_Haptics
					HapticEffect(9, 0, 0, 0)
#endplatform
				end if
			else
				if Object.EnabledInAir == true
					PlayerObjectCollision(C_TOUCH, 6, -15, 11, 15)
					if CheckResult == true
#platform: Use_Origins
						CheckResult = false
						if Player.State == Player_State_GlideSlide
							CheckResult = true
						end if
						if Player.State == Player_State_HammerDash
							CheckResult = true
						end if
						if CheckResult == true
							Player.State = Player_State_Ground
						end if
#endplatform
						Object.ActiveSpringFrame = 1

						Player.Angle		 = 0
						Player.Speed		 = 0x100000
						Player.CollisionMode = CMODE_FLOOR
						Player.Pushing		 = false
						Player.Direction	 = FACING_RIGHT
						Player.ControlLock	 = 16

						PlaySfx(SFX_G_SPRING, false)
					
#platform: Use_Haptics
						HapticEffect(9, 0, 0, 0)
#endplatform

					end if
				end if
			end if
#platform: Use_Origins
		end if
#endplatform
		break

	case FACE_FACING_LEFT
		PlayerObjectCollision(C_BOX, -8, -16, 8, 16)
#platform: Use_Origins
		if Player.Animation != ANI_GLIDING
#endplatform
			if Player.Gravity == GRAVITY_GROUND

				PlayerObjectCollision(C_TOUCH, -10, -15, -6, 15)
				if CheckResult == true
#platform: Use_Origins
					CheckResult = false
					if Player.State == Player_State_GlideSlide
						CheckResult = true
					end if
					if Player.State == Player_State_HammerDash
						CheckResult = true
					end if
					if CheckResult == true
						Player.State = Player_State_Ground
					end if
#endplatform
					Object.ActiveSpringFrame = 1
					
					Player.Speed		 = -0x100000
					Player.CollisionMode = CMODE_FLOOR
					Player.Pushing		 = false
					Player.Direction	 = FACING_LEFT
					Player.ControlLock	 = 16

					PlaySfx(SFX_G_SPRING, false)
#platform: Use_Haptics
					HapticEffect(9, 0, 0, 0)
#endplatform
				end if
			else
				if Object.EnabledInAir == true
					PlayerObjectCollision(C_TOUCH, -10, -15, -6, 15)
					if CheckResult == true
#platform: Use_Origins
						CheckResult = false
						if Player.State == Player_State_GlideSlide
							CheckResult = true
						end if
						if Player.State == Player_State_HammerDash
							CheckResult = true
						end if
						if CheckResult == true
							Player.State = Player_State_Ground
						end if
#endplatform
						Object.ActiveSpringFrame = 1

						Player.Speed		 = -0x100000
						Player.YVelocity	 = 0x20000
						Player.CollisionMode = CMODE_FLOOR
						Player.Pushing		 = false
						Player.Direction	 = FACING_LEFT
						Player.ControlLock	 = 16

						PlaySfx(SFX_G_SPRING, false)
					
#platform: Use_Haptics
						HapticEffect(9, 0, 0, 0)
#endplatform

					end if
				end if
			end if
#platform: Use_Origins
		end if
#endplatform
		break

	case FACE_FACING_DOWN
		PlayerObjectCollision(C_BOX, -16, -8, 16, 8)
		PlayerObjectCollision(C_TOUCH, -15, 6, 15, 10)
		if CheckResult == true
			if Player.CollisionMode == CMODE_ROOF
				FlipSign(Player.Speed)
				FlipSign(Player.XVelocity)
			end if
			Object.ActiveSpringFrame = 1
			
#platform: Use_Origins
			Player.State	 = Player_State_Air_NoDropDash
#endplatform

#platform: Use_Standalone
			Player.State	 = Player_State_Air
#endplatform

			Player.Gravity	 = GRAVITY_AIR
			Player.YVelocity = 0x100000
			Player.Timer	 = 0

			PlaySfx(SFX_G_SPRING, false)
				
#platform: Use_Haptics
			HapticEffect(9, 0, 0, 0)
#endplatform

		end if
		break

	case FACE_FACING_DIAGONAL_UR
		PlayerObjectCollision(C_TOUCH, -12, -16, 12, 12)
#platform: Use_Origins
		if CheckResult == true
			if Stage.PlayerListPos == PLAYER_KNUCKLES
				if Player.State == Player_State_LedgePullUp
					CheckResult = false
					Object.Unused = 1
				end if
			end if
		end if
#endplatform
		if Player.Gravity == GRAVITY_GROUND
			if CheckResult == true
				Object.ActiveSpringFrame = 1
				
#platform: Use_Origins
				Player.State	 = Player_State_Air_NoDropDash
#endplatform

#platform: Use_Standalone
				Player.State	 = Player_State_Air
#endplatform

				Player.Gravity	 = GRAVITY_AIR
				Player.Speed	 = 0xB4000
				Player.YVelocity = -0xB4000
				Player.Animation = ANI_WALKING
				Player.Direction = FACING_RIGHT
				Player.Timer	 = 0

				PlaySfx(SFX_G_SPRING, false)
				
#platform: Use_Haptics
				HapticEffect(9, 0, 0, 0)
#endplatform

			end if
		end if
		if Player.YVelocity >= 0
			if CheckResult == true
				Object.ActiveSpringFrame = 1
				
#platform: Use_Origins
				Player.State			 = Player_State_Air_NoDropDash
#endplatform

#platform: Use_Standalone
				Player.State			 = Player_State_Air
#endplatform

				Player.Gravity			 = GRAVITY_AIR
				Player.Speed			 = 0xB4000
				Player.YVelocity		 = -0xB4000
				Player.Animation         = ANI_WALKING
				Player.Direction		 = FACING_RIGHT
				Player.Timer			 = 0

				PlaySfx(SFX_G_SPRING, false)
				
#platform: Use_Haptics
				HapticEffect(9, 0, 0, 0)
#endplatform

			end if
		end if
		break

	case FACE_FACING_DIAGONAL_UL
		PlayerObjectCollision(C_TOUCH, -12, -16, 12, 12)
#platform: Use_Origins
		if CheckResult == true
			if Stage.PlayerListPos == PLAYER_KNUCKLES
				if Player.State == Player_State_LedgePullUp
					CheckResult = false
					Object.Unused = 1
				end if
			end if
		end if
#endplatform
		if Player.YVelocity >= 0
			if CheckResult == true
				Object.ActiveSpringFrame = 1
				
#platform: Use_Origins
				Player.State			 = Player_State_Air_NoDropDash
#endplatform

#platform: Use_Standalone
				Player.State			 = Player_State_Air
#endplatform

				Player.Gravity			 = GRAVITY_AIR
				Player.Speed			 = -0xB4000
				Player.YVelocity		 = -0xB4000
				Player.Animation         = ANI_WALKING
				Player.Direction		 = FACING_LEFT
				Player.Timer			 = 0

				PlaySfx(SFX_G_SPRING, false)
				
#platform: Use_Haptics
				HapticEffect(9, 0, 0, 0)
#endplatform

			end if
		end if
		if Player.Gravity == GRAVITY_GROUND
			if CheckResult == true
				Object.ActiveSpringFrame = 1
				
#platform: Use_Origins
				Player.State			 = Player_State_Air_NoDropDash
#endplatform

#platform: Use_Standalone
				Player.State			 = Player_State_Air
#endplatform

				Player.Gravity			 = GRAVITY_AIR
				Player.Speed			 = -0xB4000
				Player.YVelocity		 = -0xB4000
				Player.Animation		 = ANI_WALKING
				Player.Direction		 = FACING_LEFT
				Player.Timer			 = 0

				PlaySfx(SFX_G_SPRING, false)
				
#platform: Use_Haptics
				HapticEffect(9, 0, 0, 0)
#endplatform

			end if
		end if
		break

	case FACE_FACING_DIAGONAL_DR
		PlayerObjectCollision(C_TOUCH, -12, -12, 12, 12)
		if CheckResult == true
			Object.ActiveSpringFrame = 1
			
#platform: Use_Origins
			Player.State	 = Player_State_Air_NoDropDash
#endplatform

#platform: Use_Standalone
			Player.State	 = Player_State_Air
#endplatform

			Player.Gravity	 = GRAVITY_AIR
			Player.Speed	 = 0xB4000
			Player.YVelocity = 0xB4000
			Player.Timer	 = 0
			PlaySfx(SFX_G_SPRING, false)
				
#platform: Use_Haptics
			HapticEffect(9, 0, 0, 0)
#endplatform

		end if
		break

	case FACE_FACING_DIAGONAL_DL
		PlayerObjectCollision(C_TOUCH, -12, -12, 12, 12)
		if CheckResult == true
			Object.ActiveSpringFrame = 1
			
#platform: Use_Origins
			Player.State	 = Player_State_Air_NoDropDash
#endplatform

#platform: Use_Standalone
			Player.State	 = Player_State_Air
#endplatform

			Player.Gravity	 = GRAVITY_AIR
			Player.Speed	 = -0xB4000
			Player.YVelocity = 0xB4000
			Player.Timer	 = 0

			PlaySfx(SFX_G_SPRING, false)
				
#platform: Use_Haptics
			HapticEffect(9, 0, 0, 0)
#endplatform

		end if
		break
	end switch
end sub


sub ObjectDraw
	if Object.ActiveSpringFrame == 0
		DrawSpriteFX(Object.PropertyValue, FX_FLIP, Object.XPos, Object.YPos)
	else
		Object.ActiveSpringFrame++

		TempValue0   = Object.ActiveSpringFrame
		TempValue0 >>= 1
		switch TempValue0
		case 0
		case 1
			DrawSpriteFX(Object.PropertyValue, FX_FLIP, Object.XPos, Object.YPos)
			break

		case 2
		case 6
			TempValue1  = Object.PropertyValue
			TempValue1 += 8
			DrawSpriteFX(TempValue1, FX_FLIP, Object.XPos, Object.YPos)
			break

		case 3
		case 4
		case 5
			TempValue1  = Object.PropertyValue
			TempValue1 += 16
			DrawSpriteFX(TempValue1, FX_FLIP, Object.XPos, Object.YPos)
			break

		end switch

		if Object.ActiveSpringFrame > 12
			Object.ActiveSpringFrame = 0
		end if
	end if
end sub


sub ObjectStartup
	LoadSpriteSheet("Global/Items.gif")
	
	// Springs
	SpriteFrame(-16, -8, 32, 16, 84, 1)			// #0  - Red Spring facing up
	SpriteFrame(-8, -16, 16, 32, 117, 1)		// #1  - Red Spring facing right
	SpriteFrame(-8, -16, 16, 32, 175, 1)		// #2  - Red Spring facing left
	SpriteFrame(-16, -8, 32, 16, 84, 59)		// #3  - Red Spring facing down
	SpriteFrame(-16, -16, 32, 32, 84, 117)		// #4  - Red Spring facing diagonal right
	SpriteFrame(-16, -16, 32, 32, 117, 165)		// #5  - Red Spring facing diagonal left
	SpriteFrame(-16, -16, 32, 32, 84, 117)		// #6  - Red Spring facing diagonal right 2
	SpriteFrame(-16, -16, 32, 32, 117, 165)		// #7  - Red Spring facing diagonal left 2

	// Spring Recoil
	SpriteFrame(-16, 0, 32, 8, 84, 1)			// #8  - Red Spring Head facing up
	SpriteFrame(-8, -16, 8, 32, 125, 1)			// #9  - Red Spring Head facing right
	SpriteFrame(0, -16, 8, 32, 175, 1)			// #10 - Red Spring Head facing left
	SpriteFrame(-16, -8, 32, 8, 84, 67)			// #11 - Red Spring Head facing down
	SpriteFrame(-16, -16, 32, 32, 84, 150)		// #12 - Red Spring Recoiled diagonal right
	SpriteFrame(-16, -16, 32, 32, 150, 165)		// #13 - Red Spring Recoiled diagonal left
	SpriteFrame(-16, -16, 32, 32, 84, 150)		// #14 - Red Spring Recoiled diagonal right 2
	SpriteFrame(-16, -16, 32, 32, 150, 165)		// #15 - Red Spring Recoiled diagonal left 2
	// Spring Launch
	SpriteFrame(-16, -32, 32, 40, 84, 18)		// #16 - Red Spring Launch facing up
	SpriteFrame(-8, -16, 40, 32, 134, 1)		// #17 - Red Spring Launch facing right
	SpriteFrame(-16, -16, 40, 32, 192, 1)		// #18 - Red Spring Launch facing left
	SpriteFrame(-16, -8, 32, 40, 84, 76)		// #19 - Red Spring Launch facing down
	SpriteFrame(-16, -32, 48, 48, 117, 34)		// #20 - Red Spring Launch diagonal right
	SpriteFrame(-32, -32, 48, 48, 166, 34)		// #21 - Red Spring Launch diagonal left
	SpriteFrame(-16, -32, 48, 48, 117, 34)		// #22 - Red Spring Launch diagonal right 2
	SpriteFrame(-32, -32, 48, 48, 166, 34)		// #23 - Red Spring Launch diagonal left 2

	// Used to be below LoadSpriteSheet, moved here for consistency
	ArrayPos0 = 32
	while ArrayPos0 < 1056
		if Object[ArrayPos0].Type == TypeName[Red Spring]
			if Object[ArrayPos0].PropertyValue > 7
				Object[ArrayPos0].PropertyValue -= 8
				Object[ArrayPos0].EnabledInAir	 = true
			end if
			
			if Object[ArrayPos0].PropertyValue > 5
				Object[ArrayPos0].Direction = FLIP_Y
			end if
		end if
		ArrayPos0++
	loop
end sub


// ========================
// Editor Subs
// ========================

sub RSDKEdit
	if Editor.ReturnVariable == true
		switch Editor.VariableID
		case EDIT_VAR_PROPVAL // property value
			CheckResult = Object.PropertyValue
			break
			
		case 0 // flipFlags
			CheckResult = Object.PropertyValue
			CheckResult &= 7
			break
			
		case 1 // enabledInAir
			GetBit(CheckResult, Object.PropertyValue, 3)
			break
			
		end switch
	else
		switch Editor.VariableID
		case EDIT_VAR_PROPVAL // property value
			Object.PropertyValue = Editor.VariableValue
			break
			
		case 0 // flipFlags
			TempValue0 = 7
			Not(TempValue0)
			Object.PropertyValue &= TempValue0
			Editor.VariableValue &= 7

			Object.PropertyValue |= Editor.VariableValue
			break
			
		case 1 // enabledInAir
			CheckNotEqual(Editor.VariableValue, false)
			SetBit(Object.PropertyValue, 3, CheckResult)
			break
			
		end switch
	end if
end sub


sub RSDKDraw
	if Object.PropertyValue > 5
		// Fun little fact - the official RSDKv3 editor displayed down diagonal springs wrong
		// Here though, we may as well right that
		Object.Direction = FLIP_Y
	else
		Object.Direction = FLIP_NONE
	end if
	
	TempValue0 = Object.PropertyValue
	TempValue0 &= 7
	
	DrawSpriteFX(TempValue0, FX_FLIP, Object.XPos, Object.YPos)
end sub


sub RSDKLoad
	LoadSpriteSheet("Global/Items.gif")
	SpriteFrame(-16, -8, 32, 16, 84, 1)			// #0  - Red Spring facing up
	SpriteFrame(-8, -16, 16, 32, 117, 1)		// #1  - Red Spring facing right
	SpriteFrame(-8, -16, 16, 32, 175, 1)		// #2  - Red Spring facing left
	SpriteFrame(-16, -8, 32, 16, 84, 59)		// #3  - Red Spring facing down
	SpriteFrame(-16, -16, 32, 32, 84, 117)		// #4  - Red Spring facing diagonal right
	SpriteFrame(-16, -16, 32, 32, 117, 165)		// #5  - Red Spring facing diagonal left
	SpriteFrame(-16, -16, 32, 32, 84, 117)		// #6  - Red Spring facing diagonal right 2
	SpriteFrame(-16, -16, 32, 32, 117, 165)		// #7  - Red Spring facing diagonal left 2

	AddEditorVariable("Type")
	SetActiveVariable("Type")
	AddEnumVariable("Up", 0)
	AddEnumVariable("Right", 1)
	AddEnumVariable("Left", 2)
	AddEnumVariable("Down", 3)
	AddEnumVariable("Diagonal (Up Right)", 4)
	AddEnumVariable("Diagonal (Up Left)", 5)
	AddEnumVariable("Diagonal (Down Right)", 6)
	AddEnumVariable("Diagonal (Down Right)", 7)
	
	AddEditorVariable("EnabledInAir")
	SetActiveVariable("EnabledInAir")
	AddEnumVariable("False", false)
	AddEnumVariable("True", true)
end sub
